<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zyh&#39;s site</title>
  
  <subtitle>这里是Zyh的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sduzhang.cn/"/>
  <updated>2019-07-27T02:30:45.157Z</updated>
  <id>http://sduzhang.cn/</id>
  
  <author>
    <name>Zyh</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>123</title>
    <link href="http://sduzhang.cn/2019/07/27/123/"/>
    <id>http://sduzhang.cn/2019/07/27/123/</id>
    <published>2019-07-27T02:30:45.000Z</published>
    <updated>2019-07-27T02:30:45.157Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://sduzhang.cn/2019/07/27/hello-world/"/>
    <id>http://sduzhang.cn/2019/07/27/hello-world/</id>
    <published>2019-07-27T02:19:21.145Z</published>
    <updated>2019-07-27T02:19:21.145Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对抗环境下深度学习的局限性</title>
    <link href="http://sduzhang.cn/2019/07/16/AttackOnDL/"/>
    <id>http://sduzhang.cn/2019/07/16/AttackOnDL/</id>
    <published>2019-07-16T03:21:09.000Z</published>
    <updated>2019-07-27T02:39:40.780Z</updated>
    
    <content type="html"><![CDATA[<h3 id="论文-The-Limitations-of-Deep-Learning-in-Adversarial-Settings"><a href="#论文-The-Limitations-of-Deep-Learning-in-Adversarial-Settings" class="headerlink" title="论文 The Limitations of Deep Learning in Adversarial Settings"></a>论文 The Limitations of Deep Learning in Adversarial Settings</h3><p><a href="https://arxiv.org/pdf/1511.07528.pdf" target="_blank" rel="noopener">论文源地址</a></p><hr><ul><li><p>这是一篇16年发表在S&amp;P上的论文，引用数很多，研究者通过引入很小的扰动，使前馈神经网络对图片误分类。</p></li><li><p>论文的前提为知道神经网络的结构和权重</p><ul><li>从第一层隐藏层开始，一层一层计算训练的函数得到整个网络的前向导数</li><li>生成对抗显著图，得到图像中点对不同分类预测的影响</li><li>使用启发式算法，选取影响最大的点进行更新</li><li>不断重复这个过程，直到成功误分类或者达到能够忍受的最大失真率。</li></ul></li><li><p>针对MNIST这个问题，研究者每次对一对点进行更新，因为这样的点能够互相弥补不足（单个点在增加想要得到的类的概率时，也可能增加其他类的概率），并且一对点要比单个点更容易满足条件（对单个点太严格）。但是这样做复杂度提升了（要遍历所有组合而不只是点）。</p></li><li><p>对于实验的结果，研究者统计了不同类数字之间的转化率，以及不同书记之间成功样本的平均失真率，统计出了失败样例和高比例失真样例的分布，进一步追踪高比例失真样例的变化过程，发现样例离开源类别需要的失真率很高，而到达新类需要的失真率类似，所以总失真率要高（两个过程都高）。原因为DNN对一些类的识别更自信。</p><p>更进一步，研究者定义了Hardness measure来度量从原类别到目标类的难易程度，Adversarial distance来定义样本X到目标类的对抗距离，同时用大量样本对抗距离的最小值（作者指出最小值也可以用其他操作，例如统计期望来代替）来衡量一个网络的鲁棒性，并且都给出了计算的数学公式。</p><p>另外，作者在亚马逊众包网站做了统计，发现生成的对抗样本被识别的概率与原样本集相差不大，也就是说人基本上可以正确识别对抗样本。</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;论文-The-Limitations-of-Deep-Learning-in-Adversarial-Settings&quot;&gt;&lt;a href=&quot;#论文-The-Limitations-of-Deep-Learning-in-Adversarial-Settings&quot; 
      
    
    </summary>
    
      <category term="论文学习" scheme="http://sduzhang.cn/categories/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>对基于HPC数据进行分析的HMD的攻击</title>
    <link href="http://sduzhang.cn/2019/07/11/a164-Dinakarrao/"/>
    <id>http://sduzhang.cn/2019/07/11/a164-Dinakarrao/</id>
    <published>2019-07-11T10:55:27.000Z</published>
    <updated>2019-07-27T02:40:53.948Z</updated>
    
    <content type="html"><![CDATA[<h4 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h4><p>由于需要确定研究的课题，我从DAC19的论文中按照关键词索引找到了这篇论文，并开始了对这篇论文的学习。</p><p>在学习过程中，学长觉得我做的事太庞大了，他觉得翻译全文是一件不必要的事情，同时我也意识到了这件事相当费时间，于是我决定暂停这项工作。两次翻译结果都是半途而废，但是翻译的过程却让我的思路得到了开拓，获得了知识也有了继续下去的热情和动力。</p><p>我认为在学习过程中学习方法是件很重要的事，及时吸取经验教训是一件很重要的事，接下来我会学习对论文进行重点的摘要，重点关注它的研究对象、过程、成果以及思考是否能以此为一个切入点确定题目。</p><hr><p>读完了论文回来对论文的内容做一下总结，填一下坑。</p><p>时间： 2019-07-13</p><h4 id="论文摘要：对（基于HPC捕获的数据进行分析的HMD）的攻击"><a href="#论文摘要：对（基于HPC捕获的数据进行分析的HMD）的攻击" class="headerlink" title="论文摘要：对（基于HPC捕获的数据进行分析的HMD）的攻击"></a>论文摘要：对（基于HPC捕获的数据进行分析的HMD）的攻击</h4><ul><li><p>首先对要攻击的HMD逆向，模仿得到一个白盒的HMD（文中使用ML分类器进行模仿）。</p></li><li><p>然后使用敌对样本预测器来生成所需的（能使应用被误分类的HPC数据）。</p></li><li><p>最后用敌对样本生成器作为应用的一个独立线程产生HPC数据，从HPC来看该数据也是应用的数据，总的数据会误导HMD使其将应用误分类。</p><p>（实验中，HPC所捕获的总的数据与第二步预测的数据之间的误差 &lt; 3%）</p></li></ul><h4 id="该论文中的逆向模仿的是基于ML分类器的HMD，同时论文用实验的方式验证对基于LR的HMD也同样有效，进一步提出只要能够逆向HMD，论文提出的方法都有效。"><a href="#该论文中的逆向模仿的是基于ML分类器的HMD，同时论文用实验的方式验证对基于LR的HMD也同样有效，进一步提出只要能够逆向HMD，论文提出的方法都有效。" class="headerlink" title="该论文中的逆向模仿的是基于ML分类器的HMD，同时论文用实验的方式验证对基于LR的HMD也同样有效，进一步提出只要能够逆向HMD，论文提出的方法都有效。"></a>该论文中的逆向模仿的是基于ML分类器的HMD，同时论文用实验的方式验证对基于LR的HMD也同样有效，进一步提出只要能够逆向HMD，论文提出的方法都有效。</h4><hr><p>下面是论文前几段的详细内容 。</p><h3 id="Adversarial-Attack-on-Microarchitectural-Events-based-Malware-Detectors"><a href="#Adversarial-Attack-on-Microarchitectural-Events-based-Malware-Detectors" class="headerlink" title="Adversarial Attack on Microarchitectural Events based Malware Detectors"></a>Adversarial Attack on Microarchitectural Events based Malware Detectors</h3><h5 id="（对基于恶意软件检测器的微结构事件的对抗性攻击）"><a href="#（对基于恶意软件检测器的微结构事件的对抗性攻击）" class="headerlink" title="（对基于恶意软件检测器的微结构事件的对抗性攻击）"></a>（对基于恶意软件检测器的微结构事件的对抗性攻击）</h5><h5 id="论文来源：DAC-19"><a href="#论文来源：DAC-19" class="headerlink" title="论文来源：DAC 19"></a>论文来源：DAC 19</h5><h5 id="论文地址"><a href="#论文地址" class="headerlink" title="论文地址"></a><a href="http://delivery.acm.org/10.1145/3320000/3317762/a164-Dinakarrao.pdf?ip=211.87.235.254&id=3317762&acc=ACTIVE%20SERVICE&key=BF85BBA5741FDC6E%2EBA9BBD89F2E1EC6A%2E4D4702B0C3E38B35%2E4D4702B0C3E38B35&__acm__=1562750269_2154adae8e8bfb8801bea4a809915fb6" target="_blank" rel="noopener">论文地址</a></h5><h4 id="Abstract"><a href="#Abstract" class="headerlink" title="Abstract"></a>Abstract</h4><p>为了克服传统的基于软件的恶意软件检测技术导致的性能开销，使用机器学习分类器的硬件辅助恶意软件检测（Hardware-assisted Malware Detection，HMD）已经作为一种灵丹妙药出现来检测恶意应用、保护系统。HMD主要依靠通过硬件性能计数器（Hardware Performance Counters，HPCs）捕获生成的底层微结构事件，来区分良性软件和恶意软件。这个工作创建了一个对HMD系统的对抗性攻击，通过一个对抗性样例生成器应用在HPC跟踪（trace）中引入这种微扰来干预（tamper）系统的安全性。为了精巧地制作攻击，我们首先部署了一个对抗性样本预测器，预测对于给定应用程序在HMD被部署的机器学习（ML）分类器错误分类时的敌对HPC模式。进一步，由于攻击者没有直接访问在运行时生成的HPC的权限，因此我们基于对抗样本检测器的输出设计了一种包装在正常应用周围的对抗性样本生成器，用它来生成类似对抗检测器跟踪（trace）的HPC模式。由于对抗性样本生成器应用没有任何的恶意操作，它在传统的基于签名的恶意软件检测措施中无法被检测。用这种攻击方式，恶意软件检测率从82.76%降低到了18.04%。</p><h4 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a>Keywords</h4><p>恶意软件检测，对抗性学习，对抗性恶意软件，硬件安全，硬件辅助安全，机器学习</p><h5 id="ACM-Reference-Format"><a href="#ACM-Reference-Format" class="headerlink" title="ACM Reference Format:"></a>ACM Reference Format:</h5><p>Sai Manoj Pudukotai Dinakarrao, Sairaj Amberkar, Sahil Bhat, Abhijitt Dhavlle, Hossein Sayadi, Avesta Sasan, Houman Homayoun and Setareh Rafatirad. 2019. Adversarial Attack on Microarchitectural Events based Malware Detectors . In The 56th Annual Design Automation Conference 2019 (DAC ’19), June 2–6, 2019, Las Vegas, NV, USA. ACM, New York, NY, USA, 6 pages. <a href="https://doi.org/10.1145/3316781.3317762" target="_blank" rel="noopener">https://doi.org/10.1145/3316781.3317762</a></p><h4 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h4><p>现代计算机系统日益增加的复杂性导致了安全漏洞的增加，使这些系统成为复杂攻击的目标。攻击者利用存在的破坏系统的漏洞并部署恶意软件。Malware，也被称为恶意软件，是一个被攻击者设计用来在没有得到用户许可的情况下，为了有害的目的去感染计算机系统的程序或应用，例如窃取敏感信息，访问未经授权的数据，破坏文件，在设备上运行侵入性的程序来执行DoS（Denial-of-Service）攻击，中断必要服务来进行金融诈骗（financial fraud）。</p><p>为了克服传统签名和基于语义的软件驱动的恶意软件检测技术 [11,19] 的开销和计算复杂度等缺点，HMD方法被 [5] 提出。HMD利用底层的微结构硬件事件和日志来检测和区分恶意软件。它的好处是用更小的硬件成本 [5] 降低了恶意软件检测延迟的数量级。最近的工作 [4-6, 20-22, 24, 25] 已经展现出，通过部署机器学习技术，利用HPCs捕获的底层微结构事件（特征），可以帮助区分良性和恶意软件。HPCs是一组内置在现代微处理器中的特殊用途寄存器，用于捕获硬件相关事件的追踪，例如LLC加载失败（miss）、分支指令、分支失败（miss）和执行应用程序（良性或恶意）时执行的指令。</p><p>[5] 的工作是提出利用HPC数据进行恶意软件检测的前期工作之一，证明了离线ML算法在恶意软件分类中的有效性。采用多种ML算法（ANN， KNN）对安卓恶意软件进行检测，结果显示出了高检测精度。在 [7] 和 [24] 中的研究者讨论了通过在硬件性能计数器的信息中发现异常，在底层特征上采用无人管理的学习方法，来检测面向返回编程（ROP）和缓冲区溢出攻击的可行性。尽管无人管理的算法在检测心得恶意软件和攻击者进化方面更有效，但它们本质上是复杂的，需要更复杂的分析和计算开销。[15] 中的工作使用了逻辑回归把恶意软件分成多个类，并且训练了一个专门的分类器来检测恶意软件类。他们进一步使用专用集成学习来提高逻辑回归的准确性。为了增强性能，[15, 21] 中的工作提出了使用基于集成ML的解决方案，使用底层微处理器特性有效地检测恶意软件。这些基于ML的恶意软件检测器能在微处理器中实现，并且和软件基础的方法相比能显著降低开销，因为在硬件内部检测的速度非常快（几个时钟周期）[19, 25]。作为一个整体，可以看出最近大量的工作一直致力于采集底层微处理器事件给ML分类来保证（make）系统安全。</p><p>另一方面，尽管ML分类器被部署在许多应用并且展现了对抗随机噪声的鲁棒性，暴露的漏洞还是表明，能通过在输入数据中添加特制的干扰修改或控制 ML分类器[8, 17, 18, 23]，这种数据通常称为敌对样本（Adversarial samples）。目前存在大量关于敌对攻击的研究，主要集中在具体的计算机视觉应用上 [8, 17, 18, 23]，其中特征的数量通常很大。……</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h4&gt;&lt;p&gt;由于需要确定研究的课题，我从DAC19的论文中按照关键词索引找到了这篇论文，并开始了对这篇论文的学习。&lt;/p&gt;
&lt;p&gt;在学习
      
    
    </summary>
    
      <category term="论文学习" scheme="http://sduzhang.cn/categories/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>MalGAN</title>
    <link href="http://sduzhang.cn/2019/07/10/MalGAN/"/>
    <id>http://sduzhang.cn/2019/07/10/MalGAN/</id>
    <published>2019-07-10T02:48:33.000Z</published>
    <updated>2019-07-27T02:38:41.993Z</updated>
    
    <content type="html"><![CDATA[<h3 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h3><p>今天开始进行人工智能安全方面的学习，首先是找了白皮书来看，在白皮书里提到了这篇论文，于是在这里对这篇论文进行翻译，通过这种方式对论文进行阅读和理解。</p><p>由于要开始找题做项目，所以这篇的翻译就到此为止，这篇半成品也算是给自己留作纪念，虽然翻译的过程费了时间，不过也不是没有收获，尽管翻得不好，但是在这个过程中对一些知识有了最基本的认识，借机看了GAN，感觉还是对自己比较满意的。</p><p>尽管我没翻完，但是我找到了别人看完了这篇论文之后的<a href="https://www.zybuluo.com/wuxin1994/note/881171" target="_blank" rel="noopener">心得</a></p><p>看着别人的心得，觉得自己还有很长的路要走啊。</p><p>以下是原文的前一小部分的翻译。</p><hr><h3 id="论文名称：Generating-Adversarial-Malware-Examples-for-Black-Box-Attacks-Based-on-GAN"><a href="#论文名称：Generating-Adversarial-Malware-Examples-for-Black-Box-Attacks-Based-on-GAN" class="headerlink" title="论文名称：Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN"></a>论文名称：Generating Adversarial Malware Examples for Black-Box Attacks Based on GAN</h3><h5 id="（基于GAN的黑盒测试敌对恶意软件样本生成）"><a href="#（基于GAN的黑盒测试敌对恶意软件样本生成）" class="headerlink" title="（基于GAN的黑盒测试敌对恶意软件样本生成）"></a>（基于GAN的黑盒测试敌对恶意软件样本生成）</h5><h4 id="来源：北京大学"><a href="#来源：北京大学" class="headerlink" title="来源：北京大学"></a>来源：北京大学</h4><h3 id="Abstact"><a href="#Abstact" class="headerlink" title="Abstact"></a>Abstact</h3><p>最近几年，机器学习已经被用作检测新型的恶意代码（malware），而恶意代码的作者有着强烈的积极性去攻击这些算法。恶意代码的作者通常没有机会了解恶意代码检测系统中使用的机器学习模型的详细结构和参数，因此他们只能进行黑盒攻击。这篇论文提出了一个生成对抗网络（Generative Adversarial Network），这个网络基于MalGAN算法生成的、可能会绕过黑盒恶意代码检测系统的恶意对抗代码样例。MalGAN使用一个替代检测器（substitute detector）去匹配（fit）黑盒恶意代码检测系统。一个生成网络被训练成最小化替代检测器预测的生成对抗样本的恶意率。MalGAN相对传统基于对抗样本生成算法的有事是MalGAN能使预测率降低到几乎为零，并且能使基于再训练的对抗样本的防御方法难以工作。</p><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1 Introduction"></a>1 Introduction</h3><p>近年来，许多基于机器学习的算法已经被提出要进行恶意代码的检测，这些检测从程序中提取特征，使用一种分类器在良性程序和恶意程序间进行分类。例如……</p><p>大多数研究者把他们的努力聚焦在提高算法的检测结果（performance），但却忽视了算法的鲁棒性。通常来说，恶意软件的传播能使作者受益，因此，恶意软件的作者有足够的动力来对检测算法进行攻击。</p><p>许多机器学习的算法在面对恶意攻击时非常脆弱……（未翻完）</p><hr><p>剩下内容简单概述可以看<a href="https://www.zybuluo.com/wuxin1994/note/881171" target="_blank" rel="noopener">这个博客</a>。</p><p><a href="https://arxiv.org/pdf/1702.05983.pdf" target="_blank" rel="noopener">论文的源地址。</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h3&gt;&lt;p&gt;今天开始进行人工智能安全方面的学习，首先是找了白皮书来看，在白皮书里提到了这篇论文，于是在这里对这篇论文进行翻译，通过这种方
      
    
    </summary>
    
      <category term="论文学习" scheme="http://sduzhang.cn/categories/%E8%AE%BA%E6%96%87%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>Welcome</title>
    <link href="http://sduzhang.cn/2019/07/09/Welcome/"/>
    <id>http://sduzhang.cn/2019/07/09/Welcome/</id>
    <published>2019-07-09T07:24:12.000Z</published>
    <updated>2019-07-27T02:37:29.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Welcome"><a href="#Welcome" class="headerlink" title="Welcome"></a>Welcome</h3><p>经过一天的折腾终于有了一个自己的博客</p><p>工具是 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo + github page</span><br></pre></td></tr></table></figure><p>一日速成主要是靠<a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">这个博客</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Welcome&quot;&gt;&lt;a href=&quot;#Welcome&quot; class=&quot;headerlink&quot; title=&quot;Welcome&quot;&gt;&lt;/a&gt;Welcome&lt;/h3&gt;&lt;p&gt;经过一天的折腾终于有了一个自己的博客&lt;/p&gt;
&lt;p&gt;工具是 &lt;/p&gt;
&lt;figure class=&quot;
      
    
    </summary>
    
      <category term="生活" scheme="http://sduzhang.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
  </entry>
  
</feed>
